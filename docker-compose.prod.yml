version: '3.8'

services:
  nfpa-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=postgres
      - REDIS_HOST=redis
    env_file:
      - backend/.env.production
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    networks:
      - nfpa-network

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${DB_NAME:-nfpa_permits}
      POSTGRES_USER: ${DB_USER:-nfpa_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password_change_me}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - nfpa-network

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password_change_me}
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - nfpa-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - nfpa-backend
    restart: unless-stopped
    networks:
      - nfpa-network

volumes:
  postgres_data:
  redis_data:

networks:
  nfpa-network:
    driver: bridge
